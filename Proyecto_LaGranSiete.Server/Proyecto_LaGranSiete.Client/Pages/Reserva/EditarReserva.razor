@page "/Api/Reservas/Editar/{ReservasId:int}"
@inject IHTTPServicio http
@inject NavigationManager navigationManager



<!DOCTYPE html>

    <html>

        <head>
            <title>Modificar reserva</title>
        </head>

        <body>

            <header>
                <h1 class="text-center text-uppercase bg-warning font-monospace">Modificar Reserva</h1>
              
            </header>
        
            <main>

                <EditForm Model="Reserva" OnValidSubmit="Grabar">

                    <DataAnnotationsValidator/>

                    <div class="form-group">

                        <label>Fecha y Hora de Reserva</label>
                        

                        <div>
                            <input type="week" class="form-control" @bind-value="@Reserva.FechaHoraReserva" />
                            <ValidationMessage For="@(() => Reserva.FechaHoraReserva )" />
                        </div>

                    </div>

                </EditForm>




                <EditForm Model="Reserva" OnValidSubmit="Grabar">

                    <DataAnnotationsValidator />

                    <div class="form-group">

                        <label>Duración del alquiler</label>

                        <div>
                            <input type="number" class="form-control" @bind-value="@Reserva.DuracionAlquiler" />
                            <ValidationMessage For="@(() => Reserva.DuracionAlquiler )" />
                        </div>

                    </div>

                </EditForm>



                <EditForm Model="Reserva" OnValidSubmit="Grabar">

                    <DataAnnotationsValidator />

                    <div class="form-group">

                        <label>Monto o precio</label>

                        <div>
                            <input type="number" class="form-control" @bind-value="@Reserva.Monto" />
                            <ValidationMessage For="@(() => Reserva.Monto )" />
                        </div>

                    </div>

                </EditForm>




                <EditForm Model="Reserva" OnValidSubmit="Grabar">

                    <DataAnnotationsValidator />

                    <div class="form-group">

                        <label>Método Pago</label>

                        <div>
                            <input type="text" class="form-control" @bind-value="@Reserva.MetodoPago" />
                            <ValidationMessage For="@(() => Reserva.MetodoPago )" />
                        </div>

                    </div>

                </EditForm>

                <EditForm Model="Reserva" OnValidSubmit="Grabar">

                    <DataAnnotationsValidator />

                    <div class="form-group">

                        <label>Estado de la reserva</label>

                        <div>
                            <input type="text" class="form-control" @bind-value="@Reserva.EstadoReserva" />
                            <ValidationMessage For="@(() => Reserva.EstadoReserva )" />
                        </div>

                    </div>

                </EditForm>

                <br />

                <div>
                    <p>Confirmar reserva</p>
                    <input class="btn btn-success" type="submit" value="Confirmar...">
                </div>

            </main>
        
            <footer>

               <p>Todos los derechos reservados</p>

            </footer>
    
        </body>

    </html>




@code {
    Reserva ReservaBorrar = null;

    [Parameter] public int ReservasId { get; set; }
    // private Reserva reserva = new Reserva();


    // protected override async Task OnInitializedAsync()
    // {
    //     await base.OnInitializedAsync();
    //     await Mostrar();
    // }

    // private async Task Mostrar()
    // {
    //     var respuesta = await http.Get<Reserva>($"Api/Reservas/{reserva}");

    //     if (!respuesta.Error)
    //     {
    //         reserva = respuesta.Respuesta;
    //     }
    //     else
    //     {
    //         navigationManager.NavigateTo("/Api/Reservas");
    //     }
    // }


    // private async Task Grabar()
    // {
    //     var httpRespuesta = await http.Put<Reserva>("Api/Reservas", reserva);

    //     if (httpRespuesta.Error)
    //     {
    //         var body = httpRespuesta.HttpResponseMessage;
    //     }
    //     navigationManager.NavigateTo("/Api/Reservas");
    // }

    // private void Cancelar()
    // {
    //     navigationManager.NavigateTo("/Api/Reservas");
    // }



    [Parameter] public int ReservaId { get; set; }
    private Reserva Reserva = new Reserva();

    // string pepe = "";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Mostrar();
    }

    private async Task Mostrar()
    {
        var respuesta = await http.Get<Reserva>($"Api/Reservas/{ReservaId}");

        if (!respuesta.Error)
        {
            Reserva = respuesta.Respuesta;
        }
        else
        {
            navigationManager.NavigateTo("/Api/Reservas");
        }
    }



    private async Task Grabar()
    {

        // pepe = ReservaId.ToString();
    
        var httpRespuesta = await http.Put<Reserva>($"Api/Reservas/{ReservaId}", Reserva);
        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/Api/Reservas");
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/Api/Reservas");
    }
}
