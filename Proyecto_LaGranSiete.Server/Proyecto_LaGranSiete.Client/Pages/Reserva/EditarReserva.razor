@page "/Api/Reservas/Editar/{ReservaId:int}"
@inject IHTTPServicio http
@inject NavigationManager navigationManager

<!DOCTYPE html>

    <html>

        <head>
            <title>Editar Reserva</title>
        </head>

        <body>

            <header>
                <h1>Editar Reserva</h1>
            </header>
        
            <main>

        <EditForm Model="reserva" OnValidSubmit="Grabar">

            <DataAnnotationsValidator />

            <div class="form-group">

                <label>Fecha y Hora de Reserva</label>

                <div>
                    <input type="week" class="form-control" @bind-value="@reserva.FechaHoraReserva" />
                    <ValidationMessage For="@(() => reserva.FechaHoraReserva )" />
                </div>

            </div>

        </EditForm>




        <EditForm Model="reserva" OnValidSubmit="Grabar">

            <DataAnnotationsValidator />

            <div class="form-group">

                <label>Duración del alquiler</label>

                <div>
                    <input type="number" class="form-control" @bind-value="@reserva.DuracionAlquiler" />
                    <ValidationMessage For="@(() => reserva.DuracionAlquiler )" />
                </div>

            </div>

        </EditForm>



        <EditForm Model="reserva" OnValidSubmit="Grabar">

            <DataAnnotationsValidator />

            <div class="form-group">

                <label>Monto o precio</label>

                <div>
                    <input type="number" class="form-control" @bind-value="@reserva.Monto" />
                    <ValidationMessage For="@(() => reserva.Monto )" />
                </div>

            </div>

        </EditForm>




        <EditForm Model="reserva" OnValidSubmit="Grabar">

            <DataAnnotationsValidator />

            <div class="form-group">

                <label>Método Pago</label>

                <div>
                    <input type="text" class="form-control" @bind-value="@reserva.MetodoPago" />
                    <ValidationMessage For="@(() => reserva.MetodoPago )" />
                </div>

            </div>

        </EditForm>

        <EditForm Model="reserva" OnValidSubmit="Grabar">

            <DataAnnotationsValidator />

            <div class="form-group">

                <label>Estado de la reserva</label>

                <div>
                    <input type="text" class="form-control" @bind-value="@reserva.EstadoReserva" />
                    <ValidationMessage For="@(() => reserva.EstadoReserva )" />
                </div>

            </div>

        </EditForm>

        <br />

        <div>
            <input class="btn btn-success" type="submit" value="Reservar">
        </div>

            </main>
        
            <footer>

               

            </footer>
    
        </body>

    </html>


@code {

    [Parameter] public int ReservasId { get; set; }
    private Reserva reserva = new Reserva();


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Mostrar();
    }

    private async Task Mostrar()
    {
        var respuesta = await http.Get<Reserva>($"Api/Reservas/{reserva}");

        if (!respuesta.Error)
        {
            reserva = respuesta.Respuesta;
        }
        else
        {
            navigationManager.NavigateTo("/Api/Reservas");
        }
    }


    private async Task Grabar()
    {
        var httpRespuesta = await http.Put<Reserva>("Api/Reservas", reserva);

        if (httpRespuesta.Error)
        {
            var body = httpRespuesta.HttpResponseMessage;
        }
        navigationManager.NavigateTo("/Api/Reservas");
    }

    private void Cancelar()
    {
        navigationManager.NavigateTo("/Api/Reservas");
    }
}
